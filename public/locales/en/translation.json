{
  "About": "About",
  "Statistic": "Statistics",
  "Main": "Main",
  "Comments": "Comments",
  "Lang": "BY",
  "Pause Mode": "Pause Mode",
  "Learning Mode": "Learning Mode",
  "Start": "Start",
  "Developers": "Developers",
  "about-1": "This application is designed for educational purposes only, and may not be used as a commercial application.",
  "about-2": "The code is written in TypeScript and React with use of libraries Material UI, i18next, Howler.js. REST API Back-end is created from zero on Nest.js and has a history of commits. It’s deployed and response to GET, POST, PATCH requests (used for Drinks, User Authorization, Learning progress and in generating Learning levels).",
  "about-3": "Webpack, SaSS, Node.js, Git, ESLint, Prettier, Babel, canvas, Jest were used for development. Project is built on MVC architecture with a functional component approach.",
  "stats-title-1": "Your success in Learning",
  "stats-title-2": "Your last coffee",
  "stats-text": "correct answers in MVC Quiz",
  "Add a comment": "Add a comment",
  "sent": "Send",
  "Not found": "Oops! Looks like you are lost.",
  "secret-title": "This is Secret page",
  "secret-text": "Here we show some concept arts of this app",
  "secret-prototype": "Prototype image #42069",
  "pause-invitation": "It's a wonderful day! Enjoy your pause and drink a cup of coffee. First turn on the Coffee Machine and choose your drink.",
  "pause-turnon": "Turn on the Coffee Machine",
  "pause-choice": "Difficult choice? Simply choose any color of your drink:",
  "pause-preparing": "Preparing",
  "pause-finish": "Enjoy your coffee! Take your cup.",
  "pause-choose": "Choose your coffee",
  "pause-water": "Add water (press 'W').",
  "pause-beans": "Add coffee beans (press 'B').",
  "pause-empty": "Empty waste container (press 'E').",
  "modalCenter-text-1": "Welcome! \n Here we mix Real Life and Digital! We would like to introduce you the MVC architecture pattern on the Real Life Example – Coffee Machine. Or you can relax and drink a digital Coffee :)",
  "modalCenter-buttonOne-1": "Let’s start!",
  "modalLeft-text-2": "So, you have an exclusive coffee machine like Elon Musk, do you? Turn it on.",
  "modalLeft-text-2-1": "We are Hugs and bugs team. And you? (After log in click icon)",
  "account": "My account",
  "authorization": "Authorization",
  "login": "Log in",
  "sign-up": "Sign in",
  "email": "Email",
  "password": "Password",
  "new-password": "New password",
  "Theme": "Day/Night",
  "restore": "Restore password",
  "username": "User name",
  "secret-word": "Secret word",
  "register": "Sign in",
  "userSettings": "User settings",
  "changePhoto": "Change photo",
  "add-file": "Add new photo",
  "closePhoto": "Close",
  "save": "Save",
  "no-file": "No file chosen",
  "modalLeft-text-3": "Personal account in Coffee Machine? No way! Do you know that Coffee Machine is conceivable as an application divided on 3 parts, like MVC pattern?",
  "modalLeft-buttonOne-3": "Let’s see",
  "modalLeft-text-4": "MVC is an architecture pattern which separates logic, UI & database connection of our application. It’s divided into 3 sections: MODEL, VIEW and CONTROLLER.",
  "OK": "OK",
  "modalLeft-text-5": "Now you (User) interact with VIEW. VIEW is responsible for look and feel of our application (UI components, forms, buttons..).",
  "modalLeft-buttonOne-5": "Whaaat?",
  "modalRightTop-text-5": "CONTROLLER \nreceives input from VIEW, uses logic to translate the input to a request for the MODEL",
  "modalRightBottom-text-5": "MODEL \nstores & manages data and provides data to the VIEW",
  "modalLeft-text-6": "But what’s happened during Logging in? \n1. You filled in the Login form in the VIEW.\n2. CONTROLLER verified and sent your data to MODEL. \n3. MODEL updated VIEW and you see your name and picture",
  "CONTROLLER": "CONTROLLER",
  "MODEL": "MODEL",
  "modalLeft-text-7": "And now let’s make an MVC coffee! Choose a coffee on the screen.",
  "modalRightTop-text-8": "CONTROLLER:\nChecking validation of the User",
  "modalRightTop-text-9": "CONTROLLER:\nChecking water, coffee beans and free space in the waste container…",
  "modalRightTop-text-10": "CONTROLLER:\nMODEL, you should make ",
  "modalRightBottom-text-11": "MODEL: \nPreparing ",
  "modalRightBottom-text-12": "MODEL: \nGrinding coffee beans. Water enters the boiler and heats up.",
  "modalLeft-text-13": "Coffee is ready. You can take it (click on the cup) in the VIEW. Check if you understood the MVC with a Quiz. Good luck!",
  "Quiz": "Quiz",
  "Repeat": "Repeat",
  "Next": "Next",
  "Skip": "Skip",
  "modalLeft-text-answer-1": "Choose the correct element for this step (click the element or press \"M\" for MODEL, \"V\" for VIEW or \"C\" for CONTROLLER): You filled in the Login form",
  "modalLeft-text-answer-2": "Choose the correct element for this step (click the element or press \"M\" for MODEL, \"V\" for VIEW or \"C\" for CONTROLLER): Preparation of the coffee",
  "modalLeft-text-answer-3": "Choose the correct element for this step (click the element or press \"M\" for MODEL, \"V\" for VIEW or \"C\" for CONTROLLER): Checking water, coffee beans and free space in the waste container",
  "modalLeft-text-answer-4": "Choose the correct element for this step (click the element or press \"M\" for MODEL, \"V\" for VIEW or \"C\" for CONTROLLER): You choose a drink",
  "modalLeft-text-answer-5": "Choose the correct element for this step (click the element or press \"M\" for MODEL, \"V\" for VIEW or \"C\" for CONTROLLER): Checking validation of the User",
  "quiz-1": "QUIZ RESULT: You got ",
  "quiz-2": "/5 points.",
  "modalCenter-text-19": "Finish!\n It’s time to drink a REAL coffee!",
  "modalCenter-buttonOne-19": "Log out and shut down PC",
  "Auth": "Auth",
  "Close": "",
  "Please": "",
  "Stats": "",
  "activate": "Please activate your account",
  "activateAccount": "Activate account",
  "changePassword": "Change password",
  "close": "",
  "loadImg": "Please load only PNG, JP(E)G files less 512kb",
  "login-reload": "Please log in App or connect WiFi and reload App",
  "next": "Next",
  "sign-in": "Log In",
  "userPhoto": "User photo"
}
